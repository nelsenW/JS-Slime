{"version":3,"file":"main.js","mappings":"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","sources":["webpack://javascript-project/./src/scripts/color_pads.js","webpack://javascript-project/./src/scripts/level.js","webpack://javascript-project/./src/scripts/slime.js","webpack://javascript-project/./src/scripts/game.js","webpack://javascript-project/./src/scripts/game_view.js","webpack://javascript-project/./src/index.js"],"sourcesContent":["export const COLORS = {\n\tred: {\n\t\tlighterShade: [237, 151, 162],\n\t\tlightShade: [227, 99, 116],\n\t\tbaseShade: [215, 38, 61],\n\t\tdarkShade: [173, 31, 50],\n\t\tdarkerShade: [121, 21, 35],\n\t},\n\torange: {\n\t\tlighterShade: [246, 186, 162],\n\t\tlightShade: [241, 144, 106],\n\t\tbaseShade: [235, 94, 40],\n\t\tdarkShade: [205, 72, 19],\n\t\tdarkerShade: [149, 52, 14],\n\t},\n\tyellow: {\n\t\tlighterShade: [248, 232, 180],\n\t\tlightShade: [243, 215, 124],\n\t\tbaseShade: [238, 198, 67],\n\t\tdarkShade: [224, 177, 21],\n\t\tdarkerShade: [168, 132, 16],\n\t},\n\tgreen: {\n\t\tlighterShade: [101, 246, 149],\n\t\tlightShade: [43, 243, 110],\n\t\tbaseShade: [12, 202, 74],\n\t\tdarkShade: [9, 154, 57],\n\t\tdarkerShade: [6, 96, 36],\n\t},\n\tblue: {\n\t\tlighterShade: [163, 192, 244],\n\t\tlightShade: [109, 154, 238],\n\t\tbaseShade: [54, 11, 231],\n\t\tdarkShade: [24, 86, 201],\n\t\tdarkerShade: [17, 62, 146],\n\t\t163: 'lighterShade',\n\t\t109: 'lightShade',\n\t\t54: 'baseShade',\n\t\t24: 'darkShade',\n\t\t17: 'darkerShade',\n\t},\n\tviolet: {\n\t\tlighterShade: [112, 95, 171],\n\t\tlightShade: [85, 70, 134],\n\t\tbaseShade: [57, 47, 90],\n\t\tdarkShade: [34, 28, 53],\n\t\tdarkerShade: [9, 7, 13],\n\t},\n\tpink: {\n\t\tlighterShade: [255, 184, 209],\n\t\tlightShade: [255, 133, 175],\n\t\tbaseShade: [255, 71, 136],\n\t\tdarkShade: [255, 31, 109],\n\t\tdarkerShade: [204, 0, 71],\n\t},\n};\n\nexport class ColorPad {\n\tconstructor(ctx, color, pos) {\n\t\tthis.ctx = ctx;\n\t\tthis.pos = pos;\n\t\tthis.color = color;\n\t\tthis.baseShade = COLORS[color]['baseShade'];\n\t\tthis.width = 64;\n\t\tthis.height = 22;\n\t}\n\n\tanimate() {\n        const padSheet = document.querySelector(\"#pad-sheet\")\n        let position = Object.keys(COLORS).indexOf(this.color)\n        let x = 64 * position\n        this.ctx.drawImage(padSheet, x, 0, this.width, this.height, this.pos[0], this.pos[1], this.width, this.height);  \n    }\n}\n\n","import { ColorPad } from \"./color_pads\";\n\n\nexport class Level {\n    constructor(ctx, canvas, optionsHash, slime){\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.monitorText = '';\n        this.slime = slime;\n        this.objects = this.optionsBreaker(optionsHash);\n    }  \n    \n    optionsBreaker(optionsHash){\n        this.monitorText = optionsHash['monitorText']\n        return this.tileMapping(optionsHash['tileArray'])\n    }\n\n    tileMapping(TileArray){\n        let objectsArray = [];\n        let TileWidth =  this.canvas.width/TileArray[0].length;\n        let TileHeight = this.canvas.height/TileArray.length;\n\n        for(let i = 0; i < TileArray.length; i++){\n            for(let j = 0; j < TileArray[0].length; j++){\n                let x = j * (TileWidth);\n                let y = i * (TileHeight);\n                switch(TileArray[i][j]){\n                    case (' '):\n                        break;\n                    case ('e'):\n                        objectsArray.push(new Door(this.ctx, [x, y], TileWidth, TileHeight));\n                        break;\n                    case ('#'):\n                        objectsArray.push(new Floor(this.ctx, [x,y], TileWidth, TileHeight));\n                        break;\n                    case ('r'):\n                        objectsArray.push(new ColorPad(this.ctx, 'red', [x,y]));\n                        break;\n                    case ('o'):\n                        objectsArray.push(new ColorPad(this.ctx, 'orange', [x,y]));\n                        break;\n                    case ('y'):\n                        objectsArray.push(new ColorPad(this.ctx, 'yellow', [x,y]));\n                        break;\n                    case ('g'):\n                        objectsArray.push(new ColorPad(this.ctx, 'green', [x,y]));\n                        break;\n                    case ('v'):\n                        objectsArray.push(new ColorPad(this.ctx, 'violet', [x,y]));\n                        break;\n                    case ('p'):\n                        objectsArray.push(new ColorPad(this.ctx, 'orange', [x,y]));\n                        break;\n                    case ('s'):\n                        this.slime.vel = [0,0];\n                        this.slime.pos = [x,y];\n                        break;\n                }\n            }\n        }\n        return objectsArray\n    }\n}   \n\nclass Floor{\n    constructor(ctx, position, width, height){\n        this.ctx = ctx;\n        this.pos =  position;\n        this.width = width;\n        this.height = height;\n        this.color = 'slategrey';\n    }\n\n    animate(){\n        this.ctx.fillStyle = this.color\n        this.ctx.fillRect(this.pos[0],this.pos[1], this.width, this.height)\n    }\n}\n\nexport class Door{\n    constructor(ctx, position, width, height){\n        this.ctx = ctx;\n        this.pos =  position;\n        this.width = width;\n        this.height = height;\n        this.color = 'darkgrey';\n    }\n\n    animate(){\n        this.ctx.fillStyle = this.color\n        this.ctx.fillRect(this.pos[0],this.pos[1], this.width, this.height)\n    }\n}","import {ColorPad, COLORS} from \"./color_pads\"\nimport { Door } from \"./level\";\n\nconst ANIMATIONS = {\n    'rangedAttack': 14,\n    'meleeAttack': 10,\n    'death': 11,\n    'dash': 4,\n    'hurt': 2,\n    'move': 7,\n    'crouch': 9,\n    'idle': 9,\n    'jump': 6,\n    'land': 8\n}\n\nexport default class Slime{\n\n    constructor(pos, game, ctx, canvas){  \n        this.pos = pos;\n        this.vel = [0,0];\n        this.game = game;\n        this.color = \"blue\";\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.gravity = 0;\n        this.terminal_vel = 12;\n        this.grav_dir = 1;\n        this.jumpCount = 0;\n        this.jumpCountMax = 1;\n        this.state = \"idle\";\n        this.landing = false;\n        this.health = 64;\n        this.radius = this.health / 2;\n        this.healthRegen = false;\n        this.damage = 10;\n        this.redDmgMod = 2;\n        this.ignoreCollision = false;\n        this.dashCount = 0;\n        this.dashCountMax = 0;\n        this.floorColor = null;\n        this.moving = false\n    }\n\n    animate(frame, stagger){\n        const slimeSheet = document.querySelector(\"#slime-sheet\")\n        let position = Math.floor(frame/stagger) % ANIMATIONS[this.state]\n        if (this.state === 'crouch' && frame === 45){\n            position = 8\n        }\n        let x = 128 * position\n        let y = Object.keys(ANIMATIONS).indexOf(this.state) * 128\n        if (this.color !== \"blue\"){\n            this.ctx.drawImage(slimeSheet, x, y, 128, 128, this.pos[0], this.pos[1], this.health, this.health);\n            let focused = this.focus(this.color);\n            this.ctx.putImageData(focused, this.pos[0], this.pos[1]);\n        } else {\n            this.ctx.drawImage(slimeSheet, x, y, 128, 128, this.pos[0], this.pos[1], this.health, this.health);\n        }\n        if (this.state === 'land' && position === 7){\n            this.landing = true\n        } else if (this.state === 'dash' && position === 3){\n            this.vel[0] /= 3;\n            this.state = 'idle'\n        } else if (this.state === 'rangedAttack' && position === 13){\n            this.rangedAttack()\n            this.moving = false;\n        } else if (this.state === 'meleeAttack' && position === 9){\n            this.meleeAttack()\n            this.moving = false\n        }\n    }\n\n    updatepos(){ \n        this.pos[0] += this.vel[0];\n        if (this.vel[1] < this.terminal_vel){\n            this.vel[1] += this.gravity\n        }\n        this.pos[1] += this.vel[1];\n    }\n\n    move(slimeMove){\n        switch (slimeMove){\n            case \"jump\":\n                if (this.jumpCount > 0){\n                    this.state = 'jump';\n                    if (this.color === 'pink' && this.jumpCount === 1){\n                        this.vel[1] -= 20;\n                    } else {\n                        this.vel[1] = this.terminal_vel;  \n                        this.vel[1] -= 30; \n                    }\n                    this.jumpCount--;\n                    this.landing = false;\n                }\n                break;\n            case \"move left\":\n                this.moving = true;\n                this.state = 'move'\n                this.vel[0] = -8;\n                break;\n            case \"move right\":\n                this.moving = true;\n                this.vel[0] = 8;\n                this.state = 'move'\n                break;\n            case \"crouch\":\n                this.crouch()\n                break;\n            case \"stop\":\n                this.moving = false;\n                this.state = 'idle'\n                this.vel[0] = 0;\n                break;\n            case \"dash\":\n                this.dashCount--\n                this.state = 'dash'\n                this.vel[0] *= 3;\n                break;\n            case \"meleeAttack\":\n                this.moving = true;\n                this.state = 'meleeAttack'\n                break;\n            case \"rangedAttack\":\n                this.moving = true;\n                this.state = 'rangedAttack'\n                break;\n        }\n    }\n\n    crouch(){\n        this.state = 'crouch';\n        this.moving = true;\n    }\n\n    meleeAttack(){\n    }\n\n    rangedAttack()  {\n\n    }\n    \n\n    focus(color){\n        let slimeScan = this.ctx.getImageData(this.pos[0],this.pos[1], 64, 64)\n        let slimeArr = []\n        for(let i = 3; i < slimeScan.data.length; i+=4){\n            slimeArr.push(slimeScan.data[i])\n            slimeScan.data[i] = 0\n        }\n        for(let i = 0; i < slimeScan.data.length; i+= 4){\n            let shade = COLORS['blue'][slimeScan.data[i]]\n            if (shade){\n                slimeScan.data[i] = COLORS[color][shade][0];\n                slimeScan.data[i+1] = COLORS[color][shade][1];\n                slimeScan.data[i+2] = COLORS[color][shade][2]; \n            }\n        }\n        for(let i = 3; i < slimeScan.data.length; i+=4){\n            slimeScan.data[i] = slimeArr[(i+1)/4]\n        }   \n        return slimeScan\n    }\n\n    isCollidedWith(otherObject){\n        this.exited = false;\n        if (this.horizontalCollision(otherObject)){\n            if(otherObject instanceof Door)(\n                this.exited = true\n            )\n            while(this.horizontalCollision(otherObject)){\n                this.pos[0] -= (Math.sign(this.vel[0]) === 0) ? -1 : Math.sign(this.vel[0])\n            }\n            this.vel[0] = 0;\n        }\n\n        if (this.verticalCollision(otherObject)){\n            while(this.verticalCollision(otherObject)){\n                if (this.vel[1] === 0) this.vel[1] = -1\n                this.pos[1] -= (Math.sign(this.vel[1])); \n            }\n            this.vel[1] = 0\n            this.floorColor = null;\n            if(this.jumpCount < this.jumpCountMax){\n                this.state = 'land';\n                this.jumpCount++;\n            }\n            if(this.dashCount < this.dashCountMax ){\n                this.dashCount++;\n            }\n            if(otherObject instanceof ColorPad){\n                this.floorColor = otherObject.color;\n            }\n            if (this.landing && !this.moving){\n                this.state = 'idle'\n            }\n            if(otherObject instanceof Door)(\n                this.exited = true\n            )\n        } \n\n    }\n\n    verticalCollision(otherObject){\n        let otherX = otherObject.pos[0];\n        let otherX2 = otherObject.pos[0] + otherObject.width;\n        let otherY = otherObject.pos[1];\n        let otherY2 = otherObject.pos[1] + otherObject.height;\n\n        if(this.pos[1] + this.radius * 1.5 + this.vel[1] >= otherY &&\n            this.pos[1] + this.radius  <= otherY2 && \n            this.pos[0] + this.radius * 2 - this.vel[0] >= otherX &&\n            this.pos[0] <= otherX2){\n            return true \n        }\n        return false\n    }\n\n    horizontalCollision(otherObject){\n        let otherX = otherObject.pos[0];\n        let otherX2 = otherObject.pos[0] + otherObject.width;\n        let otherY = otherObject.pos[1];\n        let otherY2 = otherObject.pos[1] + otherObject.height;\n\n        if (this.pos[0] + this.radius * 2 >= otherX && \n            this.pos[0] <= otherX2 &&\n            this.pos[1] + this.radius >= otherY &&\n            this.pos[1] <= otherY2){\n            return true\n            }\n        return false\n    }\n    \n\n    resetStats(){\n        this.color = \"blue\";\n        this.jumpCountMax = 1;\n        this.jumpCount = 0;\n        this.ignoreCollision = false;\n        this.dashCount = 0;\n        this.dashCountMax = 0;\n        this.healthRegen = false;\n        this.damage /= this.redDmgMod\n        this.gravity = 0.98;\n    }\n}","import Slime from \"./slime.js\";\nimport {Level} from \"./level.js\";\n\nconst LEVELS = {\n    1: {\n        monitorText: 'Welcome to the test lab subject #8X75G2, please proceed to the right to begin testing...',\n        tileArray: ['###################',\n                    '#                 #',\n                    '#                 #',\n                    '#                 #',\n                    '#                 #',\n                    '#         #       #',\n                    '#                 e',\n                    '###################']\n    },\n    2: {\n        monitorText: 'For each test all we need to do is make it to the other side of the room...',\n        tileArray: ['###################',\n                    '#                 #',\n                    '#                 #',\n                    '#                 #',\n                    '#                 #',\n                    '#                 #',\n                    '#s       #        e',\n                    '###################']\n    },\n    3: {\n        monitorText: 'To move back and forth in the current room use the arrow keys to your advantage...               Wait until Im done talking jeez...',\n        tileArray: ['###################',\n                    '#                 #',\n                    '#                 #',\n                    '#                 #',\n                    '#                 e',\n                    '#            ###  #',\n                    '#s         # # # ##',\n                    '###################']\n    },\n    4: {\n        monitorText: 'Money is tight so if you are dumb enough to fall in a hole we will just get a new test subject...',\n        tileArray: ['###################',\n                    '#                 #',\n                    '#                 #',\n                    '#                 #',\n                    '#                 #',\n                    '#                 #',\n                    '#s                e',\n                    '##########  #######']\n    },\n    5:{\n\n    }\n}\n\nexport default class Game{\n    constructor(ctx, canvas){\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.slime = new Slime([this.canvas.width * 0.54 , this.canvas.height * 0.42],this, this.ctx, this.canvas);\n        this.currentLevel = 1;\n        this.level = new Level(this.ctx, this.canvas, LEVELS[this.currentLevel], this.slime);\n        this.frame = 0;\n        this.stagger = 5;\n        this.allObjects = this.level.objects;\n        this.tutorialFinished = false\n        this.generateLevel();\n    }\n\n    step(){\n       this.moveObjects();\n       this.checkCollisions(); \n    }\n\n    draw(ctx, canvas){\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        this.allObjects.forEach( obj => {\n            obj.animate(this.frame, this.stagger)\n        })\n        this.slime.animate(this.frame, this.stagger)\n        this.frame++\n    }\n\n    moveObjects(){\n       this.slime.updatepos()\n    }\n\n    checkCollisions(){\n        for(let i = 0; i < this.allObjects.length; i++){\n            this.slime.isCollidedWith(this.allObjects[i])\n            if(this.slime.exited && this.tutorialFinished === true){\n                this.nextLevel()\n            }\n        }\n        \n    }\n\n    checkGameStatus(){\n        if (this.slime.pos[1] > this.canvas.height){\n            return true\n        } \n        if (this.slime.health <= 0){\n            return true \n        }\n        return false\n    }\n\n    nextLevel(){\n        this.slime.exited = false\n        this.currentLevel++;\n        this.level = new Level(this.ctx, this.canvas, LEVELS[this.currentLevel], this.slime);\n        this.allObjects = this.level.objects;\n        this.tutorialFinished = false\n        this.generateLevel();\n    }\n\n    async generateLevel(){\n        const monitorText = document.querySelector('#monitor-text')\n        monitorText.textContent = ''\n\n        let textArr = this.level.monitorText\n\n        for(let i = 0; i < textArr.length; i++){\n            await this.typeSpeed(50);\n            monitorText.textContent += textArr[i];\n        }\n        this.tutorialFinished = true\n    }\n    typeSpeed = (ms) => {\n        return new Promise(resolve => setTimeout(resolve, ms))\n    }\n\n} ","import Game from \"./game.js\"\n\nexport default class GameView {\n    constructor(ctx, canvas){\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.game = new Game(this.ctx, this.canvas);\n        this.paused = false;\n        this.pauseMenu = document.getElementById(\"pause-menu\");\n        this.gameOverScreen = document.querySelector('.game-over-screen')\n        this.gameOverMenu = document.querySelector('#game-over-menu')\n        this.pauseMenu.addEventListener('click', this.pauseCallback.bind(this));\n    }\n\n    start(){\n        window.requestAnimationFrame(this.gameLoop.bind(this))\n    }\n\n    gameLoop() {\n        if(this.paused) return; \n        if(this.game.checkGameStatus()){\n            this.gameOverScreen.style.display = 'flex';\n            this.gameOverMenu.style.display = 'flex';\n            return;\n        }\n        this.game.step();\n        this.game.draw(this.ctx, this.canvas);\n        window.requestAnimationFrame(this.gameLoop.bind(this))\n    }\n\n    pause(){\n        this.pauseMenu.style.display = \"flex\";\n        this.paused = true;\n    }\n\n    pauseCallback(e){\n        const resumeButton = document.getElementById(\"resume\");\n        if(e.target === resumeButton){\n            this.resume();\n        }\n    }\n\n    resume(){\n        this.pauseMenu.style.display = \"none\";\n        this.paused = false;\n        this.gameLoop()\n    }\n\n    bindKeyHandlers (){\n        window.addEventListener(\"keydown\", (e) => {\n            switch(e.code){\n                case \"Space\":\n                    this.game.slime.resetStats();\n                    break;\n                case \"ArrowUp\":\n                    if(this.game.slime.landing === true){\n                        this.game.frame = 0;\n                    }\n                    this.game.slime.move(\"jump\");\n                    break;\n                case \"ArrowLeft\": \n                    this.game.slime.move(\"move left\");\n                    break;\n                case \"ArrowRight\":\n                    this.game.slime.move(\"move right\");\n                    break;\n                case \"ArrowDown\":\n                    if (this.game.frame > 45){\n                        this.game.frame = 0\n                    } else if (this.game.frame > 40){\n                        this.game.frame = 40\n                    }\n                    this.game.slime.move(\"crouch\");\n                    break;\n                case \"KeyD\":\n                    if(this.game.slime.dashCount >= this.game.slime.dashCountMax && this.game.slime.color === 'yellow'){\n                        this.game.frame = 0;\n                        this.game.slime.move(\"dash\");\n                    }      \n                    break;\n                case \"KeyF\":\n                      let floorColor = this.game.slime.floorColor\n                      if(this.game.slime.color === \"blue\"){\n                        switch(floorColor){\n                        case 'red':\n                            this.game.slime.damage *= this.game.slime.redDmgMod\n                            this.game.slime.color = \"red\";\n                            break;\n                        case 'orange':\n                            this.game.slime.color = \"orange\";\n                            break;\n                        case 'yellow':\n                            this.game.slime.dashCountMax = 1;\n                            this.game.slime.color = \"yellow\";\n                            break;\n                        case 'green':\n                            this.game.slime.color = \"green\";\n                            this.game.slime.healthRegen = true;\n                            break;\n                        case 'violet':\n                            this.game.slime.color = \"violet\";\n                            this.game.slime.ignoreCollision = true\n                            break;\n                        case 'pink':\n                            this.game.slime.jumpCountMax = 2\n                            this.game.slime.color = \"pink\";\n                            break;\n                      }\n                      }\n                    break;\n                case \"KeyP\":\n                    this.pause();\n                    break;\n                case \"KeyA\":\n                    this.game.slime.move('meleeAttack');\n                    this.game.frame = 0;\n                    break;\n                case \"KeyS\":\n                    this.game.slime.move('rangedAttack');\n                    this.game.frame = 0;\n                    break;\n            }\n        });\n        window.addEventListener(\"keyup\", (e)=>{\n            switch(e.code){\n                case \"ArrowRight\":\n                    this.game.slime.move(\"stop\");\n                    break;\n                case \"ArrowLeft\": \n                    this.game.slime.move(\"stop\");\n                    break;\n                case \"ArrowDown\":\n                    this.game.slime.move(\"stop\");\n                    break;\n        }\n        });\n    }\n}","import Game from \"./scripts/game.js\";\nimport GameView from \"./scripts/game_view.js\"\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>{\n    const startGame = document.getElementById(\"startgame\");\n    const startMenu = document.querySelector(\".start-menu\");\n    const closeButton = document.getElementById(\"close-button\");\n    const closeButton2 = document.getElementById(\"close-button2\");\n    const about = document.getElementById('about');\n    const aboutMenu = document.querySelector('.about-menu');\n    const controls = document.querySelector('#controls');\n    const controlsMenu = document.querySelector('.controls-menu');\n    const gameOverScreen = document.querySelector('.game-over-screen');\n    const gameOverMenu = document.querySelector('#game-over-menu');\n    const retry = document.getElementById('retry')\n\n    const canvas = document.querySelector(\"#canvas\");\n    const ctx = canvas.getContext('2d');\n    const slimeColors = ['red', 'orange', 'yellow', 'green', 'blue', 'violet', 'pink']\n    \n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n\n    let newGameView = new GameView(ctx, canvas);\n    newGameView.start(); \n    \n    retry.addEventListener(\"click\", () =>{\n        gameOverScreen.style.display = 'none';\n        gameOverMenu.style.display = 'none';\n        newGameView = new GameView(ctx, canvas);\n        newGameView.start();\n        startFunc();\n    })\n\n    let i = 5\n    let slimeHomeColors = setInterval(() => {\n        newGameView.game.slime.color = slimeColors[i % 7]\n        i++ \n    }, 500);\n\n    const startFunc = () => {\n        newGameView.game.slime.color = 'blue';\n        newGameView.bindKeyHandlers();\n        newGameView.game.slime.gravity = 0.98\n    }\n    \n    startGame.addEventListener(\"click\", () => {\n        clearInterval(slimeHomeColors);\n        startMenu.style.display = \"none\";\n        startFunc()\n    });\n\n    about.addEventListener(\"click\", () => {\n        startMenu.style.display = 'none';\n        aboutMenu.style.display = 'flex';\n    });\n\n    controls.addEventListener(\"click\", () => {\n        startMenu.style.display = 'none';\n        controlsMenu.style.display = 'flex';\n    });\n\n    closeButton.addEventListener(\"click\", () =>{\n        aboutMenu.style.display = 'none';\n        startMenu.style.display = 'flex';\n    });\n\n    closeButton2.addEventListener(\"click\", () =>{\n        startMenu.style.display = 'flex';\n        controlsMenu.style.display = 'none';\n    });\n\n})\n"],"names":["COLORS","red","lighterShade","lightShade","baseShade","darkShade","darkerShade","orange","yellow","green","blue","violet","pink","ColorPad","constructor","ctx","color","pos","this","width","height","animate","padSheet","document","querySelector","x","Object","keys","indexOf","drawImage","Level","canvas","optionsHash","slime","monitorText","objects","optionsBreaker","tileMapping","TileArray","objectsArray","TileWidth","length","TileHeight","i","j","y","push","Door","Floor","vel","position","fillStyle","fillRect","ANIMATIONS","Slime","game","gravity","terminal_vel","grav_dir","jumpCount","jumpCountMax","state","landing","health","radius","healthRegen","damage","redDmgMod","ignoreCollision","dashCount","dashCountMax","floorColor","moving","frame","stagger","slimeSheet","Math","floor","focused","focus","putImageData","rangedAttack","meleeAttack","updatepos","move","slimeMove","crouch","slimeScan","getImageData","slimeArr","data","shade","isCollidedWith","otherObject","exited","horizontalCollision","sign","verticalCollision","otherX","otherX2","otherY","otherY2","resetStats","LEVELS","tileArray","Game","ms","Promise","resolve","setTimeout","currentLevel","level","allObjects","tutorialFinished","generateLevel","step","moveObjects","checkCollisions","draw","clearRect","forEach","obj","nextLevel","checkGameStatus","textContent","textArr","typeSpeed","GameView","paused","pauseMenu","getElementById","gameOverScreen","gameOverMenu","addEventListener","pauseCallback","bind","start","window","requestAnimationFrame","gameLoop","style","display","pause","e","resumeButton","target","resume","bindKeyHandlers","code","startGame","startMenu","closeButton","closeButton2","about","aboutMenu","controls","controlsMenu","retry","getContext","slimeColors","innerHeight","innerWidth","newGameView","startFunc","slimeHomeColors","setInterval","clearInterval"],"sourceRoot":""}