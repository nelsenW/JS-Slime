{"version":3,"file":"main.js","mappings":"qCACO,MAAMA,EACTC,YAAYC,GACRC,KAAKD,OAASA,EACdC,KAAKC,OAAyB,IAAhBC,KAAKC,SAAiB,GACpCH,KAAKI,IAAM,CAAgB,EAAdJ,KAAKC,OAAcC,KAAKC,UAAYH,KAAKD,OAAOM,MAAqB,EAAbL,KAAKC,SACzED,KAAKC,QACND,KAAKM,IAAM,CAAkB,GAAhBJ,KAAKC,SAAiB,GAAuB,GAAhBD,KAAKC,SAAgB,IAC/DH,KAAKO,MAAwB,GAAhBL,KAAKC,SAClBH,KAAKQ,QAAUN,KAAKC,OAAO,GAC3BH,KAAKS,MAAQ,QAChB,CAEDC,UACOV,KAAKI,IAAI,GAAKJ,KAAKC,QAAUD,KAAKI,IAAI,GAAKJ,KAAKD,OAAOM,MAAQL,KAAKC,UACnED,KAAKM,IAAI,KAAO,GAEjBN,KAAKI,IAAI,GAAKJ,KAAKD,OAAOY,OAASX,KAAKC,SACvCD,KAAKI,IAAI,IAAMJ,KAAKC,OACpBD,KAAKM,IAAI,GAAqB,GAAhBJ,KAAKC,SAAiB,GACpCH,KAAKI,IAAI,GAAmB,EAAdJ,KAAKC,OAAcC,KAAKC,UAAYH,KAAKD,OAAOM,MAAqB,EAAbL,KAAKC,SAE/ED,KAAKI,IAAI,IAAMJ,KAAKM,IAAI,GACxBN,KAAKI,IAAI,IAAMJ,KAAKM,IAAI,EAC3B,CAEDM,KAAKC,GAEDA,EAAIC,UAAY,OAChBD,EAAIE,YACJF,EAAIG,IAAIhB,KAAKI,IAAI,GAAIJ,KAAKI,IAAI,GAAIJ,KAAKC,OAAQ,EAAa,EAAVC,KAAKe,IACvDJ,EAAIK,MAEP,ECjCE,MAAMC,EAAS,CAClB,EAAG,CACCC,YAAa,2FACbC,UAAW,CAAC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BAEhB,EAAG,CACCD,YAAa,8EACbC,UAAW,CAAC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BAEhB,EAAG,CACCD,YAAa,sIACbC,UAAW,CAAC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BAEhB,EAAG,CACCD,YAAa,oGACbC,UAAW,CAAC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BAEhB,EAAE,CACED,YAAa,wEACbC,UAAW,CAAC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BAEhB,EAAE,CACED,YAAa,0EACbC,UAAW,CAAC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BAEhB,EAAE,CACED,YAAa,2EACbC,UAAW,CAAC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BAEhB,EAAE,CACED,YAAa,6DACbC,UAAW,CAAC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BAEhB,EAAE,CACED,YAAa,6FACbC,UAAW,CAAC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BAEhB,GAAG,CACCD,YAAa,uHACbC,UAAW,CAAC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BAEhB,GAAG,CACCD,YAAa,qCACbC,UAAW,CAAC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BAEhB,GAAG,CACCD,YAAa,qEACbC,UAAW,CAAC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,0BAEhB,GAAG,CACCD,YAAa,kDACbC,UAAW,CAAC,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,+BAEhB,GAAG,CACCD,YAAa,gCACbC,UAAW,CAAC,6BACZ,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,+BAEJ,GAAG,CACCD,YAAa,sDACbC,UAAW,CAAC,6BACZ,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,+BAGJ,GAAG,CACCD,YAAY,GACZC,UAAW,CAAC,yBACZ,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBA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","sources":["webpack://javascript-project/./src/scripts/home_animation.js","webpack://javascript-project/./src/scripts/levelsList.js","webpack://javascript-project/./src/scripts/color_pads.js","webpack://javascript-project/./src/scripts/spike.js","webpack://javascript-project/./src/scripts/level.js","webpack://javascript-project/./src/scripts/slime.js","webpack://javascript-project/./src/scripts/game.js","webpack://javascript-project/./src/scripts/game_view.js","webpack://javascript-project/./src/index.js"],"sourcesContent":["\nexport class Blob {\n    constructor(canvas){\n        this.canvas = canvas;\n        this.radius = Math.random() * 120 + 30;\n        this.pos = [(this.radius * 2 + (Math.random() * (this.canvas.width - this.radius *4))),\n        -this.radius]\n        this.vel = [(Math.random() * 0.2 - 0.1), (Math.random() * 0.5 +0.5)];\n        this.range = Math.random() * 30;\n        this.gravity = Math.random(0 * 0.005);\n        this.color = 'purple'\n    }\n\n    update(){\n        if(this.pos[0] < this.radius || this.pos[0] > this.canvas.width - this.radius){\n            this.vel[0] *= -1\n        }\n        if(this.pos[1] > this.canvas.height + this.radius){\n            this.pos[1] = -this.radius;\n            this.vel[1] = Math.random() * 0.5 + 0.5;\n            this.pos[0] = this.radius * 2 + (Math.random() * (this.canvas.width - this.radius *4));\n        }\n        this.pos[0] += this.vel[0];\n        this.pos[1] += this.vel[1];\n    }\n\n    draw(ctx){\n        // ctx.fillStyle = `rgb(${this.color[0]},${this.color[1]},${this.color[2]})`\n        ctx.fillStyle = 'blue'\n        ctx.beginPath();\n        ctx.arc(this.pos[0], this.pos[1], this.radius, 0, Math.PI * 2);\n        ctx.fill();\n\n    }\n}\n\n\n","export const LEVELS = {\n    1: {\n        monitorText: 'Welcome to the test lab subject #8X75G2, please proceed to the right to begin testing...',\n        tileArray: ['#####################',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#          s        #',\n                    '#          #        #',\n                    '#                   e',\n                    '#####################']\n    },\n    2: {\n        monitorText: 'For each test all we need to do is make it to the other side of the room...',\n        tileArray: ['#####################',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#            #      #',\n                    '#          ###      #',\n                    '#s       #####      e',\n                    '#####################']\n    },\n    3: {\n        monitorText: 'To move back and forth in the current room use the arrow keys to your advantage...               Wait until Im done talking jeez...',\n        tileArray: ['#####################',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#                   e',\n                    '#              ###  #',\n                    '#s           # # # ##',\n                    '#####################']\n    },\n    4: {\n        monitorText: 'Money is tight so if you are dumb enough to fall in a hole we will just get a new test subject...',\n        tileArray: ['#####################',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#s                  e',\n                    '##########  #########']\n    },\n    5:{\n        monitorText: 'Focus on a pad by pressing F and you should be able to change colors.',\n        tileArray: ['#####################',\n                    '#                   e',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#s                  #',\n                    '######r##############']\n    },\n    6:{\n        monitorText: 'Thats a big hole... hot damn. Being pink gives you a double jump btw...',\n        tileArray: ['#####################',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#s                  e',\n                    '######p###     ######']\n    },\n    7:{\n        monitorText: 'yellow on the other hand gives you the ability to dash with the D button',\n        tileArray: ['#####################',\n                    '#        #    #     #',\n                    '#        #    #     #',\n                    '#        #    #     #',\n                    '#        #    #     #',\n                    '#        ######     #',\n                    '#s                  e',\n                    '######y## ## # ######']\n    },\n    8:{\n        monitorText: 'Press space to turn blue so you can reabsorb another color',\n        tileArray: ['#####################',\n                    '#         #####     #',\n                    '#                   #',\n                    '#              #    #',\n                    '#        y     #    #',\n                    '#        #     #    #',\n                    '#s       #     #    e',\n                    '######p###     ######']\n    },\n    9:{\n        monitorText: 'Now this is testing so we have been scoring you and tracking your vitals... Here they are.',\n        tileArray: ['#####################',\n                    '#                   #',\n                    '#         #         e',\n                    '#      #  #  #      #',\n                    '#   #     #        ##',\n                    '#   ###   #    #    #',\n                    '#s#     #           #',\n                    '#####################']\n    },\n    10:{\n        monitorText: 'This is extremely important!!! Those pointy things will rip chunks off of you. If you get small enough you will die.',\n        tileArray: ['#####################',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#s#                 #',\n                    '#######^^^#########e#']\n    },\n    11:{\n        monitorText: 'Good luck not getting hurt lmao...',\n        tileArray: ['#####################',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#s#         ^       #',\n                    '#######^^^^#^^#####e#']\n    },\n    12:{\n        monitorText: 'Green pads are a one time use but will restore you a bit of health',\n        tileArray: ['#####################',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#                   #',\n                    '#s                  #',\n                    '#######g###########e#']\n    },\n    13:{\n        monitorText: 'Sometimes dying a little bit can help ya out...',\n        tileArray: ['##########################',\n                    '#                        #',\n                    '#                        #',\n                    '#                        #',\n                    '#                        #',\n                    '#                        #',\n                    '#                        #',\n                    '#                        #',\n                    '#                        #',\n                    '#                        #',\n                    '#                        #',\n                    '#                        #',\n                    '#                        #',\n                    '#                        #',\n                    '#                        #',\n                    '#                        #',\n                    '######                   #',\n                    '#    ###                 #',\n                    '#  s                     #',\n                    '#^######################e#']\n    },\n    14:{\n        monitorText: 'Only gets harder from here...',\n        tileArray: ['##########################',\n        '#                        #',\n        '#                        #',\n        '#                        #',\n        '#                        #',\n        '#                        #',\n        '#                        #',\n        '#                        #',\n        '#           ##           #',\n        '#                        #',\n        '#      ##                #',\n        '#                        #',\n        '#  ##                    #',\n        '#                        #',\n        '#      ##                #',\n        '#                        #',\n        '######                   #',\n        '#    ###                 #',\n        '#  s     #               #',\n        '#########           ####e#']\n    },\n    15:{\n        monitorText: 'Gonna leave you alone for a bit now... Good luck...',\n        tileArray: ['##########################',\n        '#                        #',\n        '#                        #',\n        '#                        #',\n        '#          ^^^^          #',\n        '#y#                      #',\n        '#        ^               #',\n        '#        ^               #',\n        '#        ^               #',\n        '#        ^               #',\n        '#      ##^               #',\n        '#        ^               #',\n        '#  ##    ^               #',\n        '#        ^               #',\n        '#      ##^               #',\n        '#        ^               #',\n        '######   ^               #',\n        '#    ##^ ^               #',\n        '#  s     ^               #',\n        '###p######          ##g#e#']\n\n    },\n    16:{\n        monitorText:'',\n        tileArray: ['#^^^^^^^^^^^^^^^^^^^^#',\n        '#                    #',\n        '#                    #',\n        '#                    #',\n        '#                    #',\n        '#                    #',\n        '#                    #',\n        '#                    #',\n        '#                    #',\n        '#                    #',\n        '#                    #',\n        '#                    #',\n        '#        ###         #',\n        '#                    #',\n        '#                    #',\n        '#                    #',\n        '#                     ',\n        '#                    e',\n        '#  s                ##',\n        '###r##               #']\n    }\n}\n\n\ntileArray: ['#####################',\n            '#                   #',\n            '#                   #',\n            '#                   #',\n            '#          s        #',\n            '#          #        #',\n            '#                   e',\n            '#####################']","export const COLORS = {\n\tred: {\n\t\tlighterShade: [237, 151, 162],\n\t\tlightShade: [227, 99, 116],\n\t\tbaseShade: [215, 38, 61],\n\t\tdarkShade: [173, 31, 50],\n\t\tdarkerShade: [121, 21, 35],\n\t},\n\torange: {\n\t\tlighterShade: [246, 186, 162],\n\t\tlightShade: [241, 144, 106],\n\t\tbaseShade: [235, 94, 40],\n\t\tdarkShade: [205, 72, 19],\n\t\tdarkerShade: [149, 52, 14],\n\t},\n\tyellow: {\n\t\tlighterShade: [248, 232, 180],\n\t\tlightShade: [243, 215, 124],\n\t\tbaseShade: [238, 198, 67],\n\t\tdarkShade: [224, 177, 21],\n\t\tdarkerShade: [168, 132, 16],\n\t},\n\tgreen: {\n\t\tlighterShade: [101, 246, 149],\n\t\tlightShade: [43, 243, 110],\n\t\tbaseShade: [12, 202, 74],\n\t\tdarkShade: [9, 154, 57],\n\t\tdarkerShade: [6, 96, 36],\n\t},\n\tblue: {\n\t\tlighterShade: [163, 192, 244],\n\t\tlightShade:   [109, 154, 238],\n\t\tbaseShade:    [54, 11, 231],\n\t\tdarkShade:    [24, 86, 201],\n\t\tdarkerShade:  [17, 62, 146],\n\t\t163: 'lighterShade',\n\t\t109: 'lightShade',\n\t\t54: 'baseShade',\n\t\t24: 'darkShade',\n\t\t17: 'darkerShade',\n\t},\n\tviolet: {\n\t\tlighterShade: [112, 95, 171],\n\t\tlightShade: [85, 70, 134],\n\t\tbaseShade: [57, 47, 90],\n\t\tdarkShade: [34, 28, 53],\n\t\tdarkerShade: [9, 7, 13],\n\t},\n\tpink: {\n\t\tlighterShade: [255, 184, 209],\n\t\tlightShade: [255, 133, 175],\n\t\tbaseShade: [255, 71, 136],\n\t\tdarkShade: [255, 31, 109],\n\t\tdarkerShade: [204, 0, 71],\n\t},\n\tclear: {}\n};\n\nexport class ColorPad {\n\tconstructor(ctx, color, pos, width, height) {\n\t\tthis.ctx = ctx;\n\t\tthis.pos = pos;\n\t\tthis.color = color;\n\t\tthis.baseShade = COLORS[color]['baseShade'];\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.used = false;\n\t}\n\n\tanimate() {\n        const padSheet = document.querySelector(\"#pad-sheet\")\n        let position = Object.keys(COLORS).indexOf(this.color)\n        let x = 256 * position\n        this.ctx.drawImage(padSheet, x, 0, 256, 256, this.pos[0], this.pos[1], this.width, this.height);  \n    }\n}\n\n","export default class Spike{\n    constructor(ctx, pos, width, height){\n        this.ctx = ctx;\n        this.pos = pos;\n        this.width = width;\n        this.height = height;\n    }\n\n    animate(){\n        const spike = document.querySelector('#spike-sheet')\n        this.ctx.drawImage(spike, 0, 0, 256, 256, this.pos[0], this.pos[1], this.width, this.height)\n    }\n}","import { ColorPad } from \"./color_pads\";\nimport Spike from \"./spike\";\n\nexport class Level {\n    constructor(ctx, canvas, optionsHash, slime){\n        this.ctx = ctx;\n        this.score = 1000\n        this.canvas = canvas;\n        this.monitorText = '';\n        this.slime = slime;\n        this.objects = this.optionsBreaker(optionsHash);\n    }  \n    \n    optionsBreaker(optionsHash){\n        this.monitorText = optionsHash['monitorText']\n        return this.tileMapping(optionsHash['tileArray'])\n    }\n\n    tileMapping(TileArray){\n        let objectsArray = [];\n        let TileWidth =  this.canvas.width/TileArray[0].length;\n        let TileHeight = this.canvas.height/TileArray.length;\n\n        for(let i = 0; i < TileArray.length; i++){\n            for(let j = 0; j < TileArray[0].length; j++){\n                let x = j * (TileWidth);\n                let y = i * (TileHeight);\n\n                switch(TileArray[i][j]){\n                    case (' '):\n                        break;\n                    case ('e'):\n                        objectsArray.push(new Door(this.ctx, [x, y], TileWidth, TileHeight));\n                        break;\n                    case ('#'):\n                        objectsArray.push(new Floor(this.ctx, [x,y], TileWidth, TileHeight));\n                        break;\n                    case ('r'):\n                        objectsArray.push(new ColorPad(this.ctx, 'red', [x,y], TileWidth, TileHeight));\n                        break;\n                    case ('o'):\n                        objectsArray.push(new ColorPad(this.ctx, 'orange', [x,y], TileWidth, TileHeight ));\n                        break;\n                    case ('y'):\n                        objectsArray.push(new ColorPad(this.ctx, 'yellow', [x,y], TileWidth, TileHeight ));\n                        break;\n                    case ('g'):\n                        objectsArray.push(new ColorPad(this.ctx, 'green', [x,y], TileWidth, TileHeight ));\n                        break;\n                    case ('v'):\n                        objectsArray.push(new ColorPad(this.ctx, 'violet', [x,y], TileWidth, TileHeight ));\n                        break;\n                    case ('p'):\n                        objectsArray.push(new ColorPad(this.ctx, 'pink', [x,y], TileWidth, TileHeight ));\n                        break;\n                    case ('^'):\n                        objectsArray.push(new Spike(this.ctx, [x,y], TileWidth, TileHeight));\n                        break;\n                    case ('s'):\n                        this.slime.vel = [0,0];\n                        this.slime.pos = [x,y];\n                        break;\n                }\n            }\n        }\n        return objectsArray\n    }\n}   \n\nclass Floor{\n    constructor(ctx, position, width, height){\n        this.ctx = ctx;\n        this.pos =  position;\n        this.width = width;\n        this.height = height;\n        this.color = 'slategrey';\n    }\n\n    animate(){\n        this.ctx.fillStyle = this.color\n        this.ctx.fillRect(this.pos[0],this.pos[1], this.width, this.height)\n    }\n}\n\nexport class Door{\n    constructor(ctx, position, width, height){\n        this.ctx = ctx;\n        this.pos =  position;\n        this.width = width;\n        this.height = height;\n        this.color = 'darkgrey';\n    }\n\n    animate(){\n        this.ctx.fillStyle = this.color\n        this.ctx.fillRect(this.pos[0],this.pos[1], this.width, this.height)\n    }\n}","import { ColorPad, COLORS } from './color_pads';\nimport { Door } from './level';\nimport Spike from './spike';\n\nconst ANIMATIONS = {\n\trangedAttack: 14,\n\tmeleeAttack: 10,\n\tdeath: 11,\n\tdash: 4,\n\thurt: 4,\n\tmove: 7,\n\tcrouch: 9,\n\tidle: 9,\n\tjump: 6,\n\tland: 8,\n};\n\nexport default class Slime {\n\tconstructor(pos, game, ctx, canvas) {\n\t\tthis.pos = pos;\n\t\tthis.vel = [0, 0];\n\t\tthis.game = game;\n\t\tthis.color = 'blue';\n\t\tthis.canvas = canvas;\n\t\tthis.ctx = ctx;\n\t\tthis.gravity = 0;\n\t\tthis.terminal_vel = 12;\n\t\tthis.grav_dir = 1;\n\t\tthis.jumpCount = 0;\n\t\tthis.jumpCountMax = 1;\n\t\tthis.state = 'idle';\n\t\tthis.landing = false;\n\t\tthis.health = 64;\n\t\tthis.roomHealth = this.health;\n\t\tthis.radius = this.health / 2;\n\t\tthis.iFrames = false;\n\t\tthis.maxHealth = 64;\n\t\tthis.damage = 10;\n\t\tthis.redDmgMod = 2;\n\t\tthis.ignoreCollision = false;\n\t\tthis.dashCount = 0;\n\t\tthis.dashCountMax = 0;\n\t\tthis.floorColor = null;\n\t\tthis.moving = false;\n\t}\n\n\tanimate(frame, stagger) {\n\t\tconst slimeSheet = document.querySelector('#slime-sheet');\n\t\tlet position = Math.floor(frame / stagger) % ANIMATIONS[this.state];\n\t\tif (this.state === 'crouch' && frame === 45) {\n\t\t\tposition = 8;\n\t\t}\n\t\tlet x = 128 * position;\n\t\tlet y = Object.keys(ANIMATIONS).indexOf(this.state) * 128;\n\t\tif (this.color !== 'blue') {\n\t\t\tthis.ctx.drawImage(\n\t\t\t\tslimeSheet,\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\t128,\n\t\t\t\t128,\n\t\t\t\tthis.pos[0],\n\t\t\t\tthis.pos[1],\n\t\t\t\tthis.radius * 2,\n\t\t\t\tthis.radius * 2,\n\t\t\t);\n\t\t\tlet focused = this.focus(this.color);\n\t\t\tthis.ctx.putImageData(focused, this.pos[0], this.pos[1]);\n\t\t} else {\n\t\t\tthis.ctx.drawImage(\n\t\t\t\tslimeSheet,\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\t128,\n\t\t\t\t128,\n\t\t\t\tthis.pos[0],\n\t\t\t\tthis.pos[1],\n\t\t\t\tthis.radius * 2,\n\t\t\t\tthis.radius * 2\n\t\t\t);\n\t\t}\n\t\tif (this.state === 'land' && position === 7) {\n\t\t\tthis.landing = true;\n\t\t} else if (this.state === 'dash' && position === 3) {\n\t\t\tthis.vel[0] /= 3;\n\t\t\tthis.state = 'idle';\n\t\t} else if (this.state === 'rangedAttack' && position === 13) {\n\t\t\tthis.rangedAttack();\n\t\t\tthis.moving = false;\n\t\t} else if (this.state === 'meleeAttack' && position === 9) {\n\t\t\tthis.meleeAttack();\n\t\t\tthis.moving = false;\n\t\t}\n\t}\n\n\tupdatepos() {\n\t\tthis.pos[0] += this.vel[0];\n\t\tif (this.grav_dir === -1 && this.vel[1] > -this.terminal_vel){\n\t\t\tthis.vel[1] -= this.gravity;\n\t\t} else if (this.grav_dir === 1 && this.vel[1] < this.terminal_vel) {\n\t\t\tthis.vel[1] += this.gravity;\n\t\t}\n\t\tthis.pos[1] += this.vel[1];\n\t}\n\n\tmove(slimeMove) {\n\t\tswitch (slimeMove) {\n\t\t\tcase 'jump':\n\t\t\t\tif (this.jumpCount > 0) {\n\t\t\t\t\tthis.state = 'jump';\n\t\t\t\t\tif (this.color === 'pink' && this.jumpCount === 1) {\n\t\t\t\t\t\tthis.vel[1] -= Math.sign(this.grav_dir) * 20;\n \t\t\t\t\t} else {\n\t\t\t\t\t\tthis.vel[1] = this.terminal_vel * Math.sign(this.grav_dir);\n\t\t\t\t\t\tthis.vel[1] -= Math.sign(this.grav_dir) * 30;\n\t\t\t\t\t}\n\t\t\t\t\tthis.jumpCount--;\n\t\t\t\t\tthis.landing = false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'move left':\n\t\t\t\tthis.moving = true;\n\t\t\t\tthis.state = 'move';\n\t\t\t\tthis.vel[0] = -8;\n\t\t\t\tbreak;\n\t\t\tcase 'move right':\n\t\t\t\tthis.moving = true;\n\t\t\t\tthis.vel[0] = 8;\n\t\t\t\tthis.state = 'move';\n\t\t\t\tbreak;\n\t\t\tcase 'crouch':\n\t\t\t\tthis.crouch();\n\t\t\t\tbreak;\n\t\t\tcase 'stop':\n\t\t\t\tthis.moving = false;\n\t\t\t\tthis.state = 'idle';\n\t\t\t\tthis.vel[0] = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'dash':\n\t\t\t\tthis.dashCount--;\n\t\t\t\tthis.state = 'dash';\n                this.vel[0] = Math.sign(this.vel[0]) * 24;\n\t\t\t\tbreak;\n\t\t\tcase 'meleeAttack':\n\t\t\t\tthis.moving = true;\n\t\t\t\tthis.state = 'meleeAttack';\n\t\t\t\tbreak;\n\t\t\tcase 'rangedAttack':\n\t\t\t\tthis.moving = true;\n\t\t\t\tthis.state = 'rangedAttack';\n\t\t\t\tbreak;\n\t\t}\n\t\tif (this.iFrames){\n\t\t\tthis.state = 'hurt'\n\t\t}\n\t}\n\n\tcrouch() {\n\t\tthis.state = 'crouch';\n\t\tthis.moving = true;\n\t}\n\n\tmeleeAttack() {} //For future implementation \n\n\trangedAttack() {} //For fututre implementation \n\n\tfocus(color) {\n\t\tlet slimeScan = this.ctx.getImageData(this.pos[0], this.pos[1], 64, 64);\n\t\tlet slimeArr = [];\n\t\tfor (let i = 3; i < slimeScan.data.length; i += 4) {\n\t\t\tslimeArr.push(slimeScan.data[i]);\n\t\t\tslimeScan.data[i] = 0;\n\t\t}\n\t\tfor (let i = 0; i < slimeScan.data.length; i += 4) {\n\t\t\tlet shade = COLORS['blue'][slimeScan.data[i]];\n\t\t\tif (shade) {\n\t\t\t\tslimeScan.data[i] = COLORS[color][shade][0];\n\t\t\t\tslimeScan.data[i + 1] = COLORS[color][shade][1];\n\t\t\t\tslimeScan.data[i + 2] = COLORS[color][shade][2];\n\t\t\t}\n\t\t}\n\t\tfor (let i = 3; i < slimeScan.data.length; i += 4) {\n\t\t\tslimeScan.data[i] = slimeArr[(i + 1) / 4];\n\t\t}\n\t\treturn slimeScan;\n\t}\n\n\tisCollidedWith(otherObject) {\n        this.exited = false;\n\t\tif (this.horizontalCollision(otherObject)) {\n\t\t\tif (otherObject instanceof Door) this.exited = true;\n\t\t\twhile (this.horizontalCollision(otherObject)) {\n\t\t\t\tthis.pos[0] -=\n\t\t\t\t\tMath.sign(this.vel[0]) === 0 ? -1 : Math.sign(this.vel[0]);\n\t\t\t}\n\t\t\tif (otherObject instanceof Spike && !this.iFrames){\n\t\t\t\tthis.takeDamage(10)\n\t\t\t}\n\t\t\tthis.vel[0] = 0;\n\t\t}\n\n\t\tif (this.verticalCollision(otherObject)) {\n            if (this.jumpCount < this.jumpCountMax &&  Math.abs(this.vel[1]) >= 0) {\n\t\t\t\tthis.state = 'land';\n\t\t\t\tthis.jumpCount++;\n\t\t\t}\n\t\t\tif (this.dashCount < this.dashCountMax && this.vel[1] >= 0) {\n\t\t\t\tthis.dashCount++;\n\t\t\t}\n\t\t\twhile (this.verticalCollision(otherObject)) {\n\t\t\t\tif (this.vel[1] === 0) this.vel[1] = -1;\n\t\t\t\tthis.pos[1] -= Math.sign(this.vel[1]);\n\t\t\t}\n\t\t\tthis.vel[1] = 0;\n\t\t\tthis.floorColor = null;\n\t\t\t\n\t\t\tif (otherObject instanceof ColorPad) {\n\t\t\t\tthis.floorColor = otherObject;\n\t\t\t}\n\t\t\tif (this.landing && !this.moving && !this.iFrames) {\n\t\t\t\tthis.state = 'idle';\n\t\t\t}\n\t\t\tif (otherObject instanceof Door) this.exited = true;\n\t\t\tif (otherObject instanceof Spike && !this.iFrames){\n\t\t\t\tthis.takeDamage(10)\n\t\t\t}\n\t\t}\n\t}\n\n\tverticalCollision(otherObject) {\n\t\tlet otherX = otherObject.pos[0];\n\t\tlet otherX2 = otherObject.pos[0] + otherObject.width;\n\t\tlet otherY = otherObject.pos[1];\n\t\tlet otherY2 = otherObject.pos[1] + otherObject.height;\n\n\t\tif (\n\t\t\tthis.pos[1] + this.radius * 1.5 + this.vel[1] >= otherY &&\n\t\t\tthis.pos[1] <= otherY2 &&\n\t\t\tthis.pos[0] + this.radius * 2 - this.vel[0] >= otherX &&\n\t\t\tthis.pos[0] <= otherX2\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\thorizontalCollision(otherObject) {\n\t\tlet otherX = otherObject.pos[0];\n\t\tlet otherX2 = otherObject.pos[0] + otherObject.width;\n\t\tlet otherY = otherObject.pos[1];\n\t\tlet otherY2 = otherObject.pos[1] + otherObject.height;\n\n\t\tif (\n\t\t\tthis.pos[0] + this.radius * 2 >= otherX &&\n\t\t\tthis.pos[0] <= otherX2 &&\n\t\t\tthis.pos[1] + this.radius >= otherY &&\n\t\t\tthis.pos[1] - this.vel[1] <= otherY2\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\ttakeDamage(damage){\n\t\tthis.state = 'hurt';\n\t\tthis.iFrames = true;\n\t\tthis.health -= damage;\n\t\tthis.radius = this.health / 2\n\t\tif (this.health < 32){\n\t\t\tthis.radius = 17\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tthis.iFrames = false;\n\t\t\tthis.state = 'idle'\n\t\t},1000)\n\t}\n\n\tresetStats() {\n\t\tthis.color = 'blue';\n\t\tthis.jumpCountMax = 1;\n\t\tthis.jumpCount = 0;\n\t\tthis.ignoreCollision = false;\n\t\tthis.dashCount = 0;\n\t\tthis.dashCountMax = 0;\n\t\tthis.gravity = 0.98;\n\t\tthis.grav_dir = 1;\n\t\tthis.vel[1] = Math.abs(this.vel[1]);\n\t}\n}\n","import Slime from \"./slime.js\";\nimport {Level, Door} from \"./level.js\";\nimport {LEVELS} from './levelsList'\n\nexport class Game{\n    constructor(ctx, canvas){\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.slime = new Slime([this.canvas.width * 0.54 , this.canvas.height * 0.42],this, this.ctx, this.canvas);\n        this.currentLevel = 1;\n        this.level = new Level(this.ctx, this.canvas, LEVELS[this.currentLevel], this.slime);\n        this.frame = 0;\n        this.stagger = 5;\n        this.monitor = document.querySelector('.monitor')\n        this.scoreFrame = document.querySelector('.score')\n        this.healthFrame = document.querySelector('.health')\n        this.scoreText = document.getElementById('score')\n        this.healthBar = document.getElementById('health')\n        this.deathFrame = document.querySelector('.deaths')\n        this.deathText = document.getElementById('deaths')\n        this.deaths = 0;\n        this.score = 0;\n        this.allObjects = this.level.objects;\n        this.tutorialFinished = false;\n        this.generateLevel();\n    }\n\n    step(){\n       this.moveObjects();\n       this.checkCollisions(); \n    }\n\n    draw(ctx, canvas){\n        this.level.score--;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        this.allObjects.forEach( obj => {\n            obj.animate(this.frame, this.stagger)\n        })\n        this.slime.animate(this.frame, this.stagger)\n        if(this.currentLevel >= 9){\n            this.scoreFrame.style.display = 'inline';\n            this.healthFrame.style.display = 'inline-block';\n            this.deathFrame.style.display = 'inline';\n            this.deathText.textContent = this.deaths;\n            this.scoreText.textContent = this.score;\n            this.healthBar.value = this.slime.health;\n        }\n        this.frame++\n    }\n\n    moveObjects(){\n       this.slime.updatepos()\n    }\n\n    checkCollisions(){\n        for(let i = 0; i < this.allObjects.length; i++){\n            this.slime.isCollidedWith(this.allObjects[i])\n            if(this.slime.exited && this.tutorialFinished === true){\n                this.nextLevel()\n            }\n        }\n        \n    }\n\n    checkGameStatus(){\n        if (this.slime.pos[1] > this.canvas.height){\n            return true\n        } \n        if (this.slime.health <= 0){\n            return true \n        }\n        return false\n    }\n\n    nextLevel(){\n        this.score += this.level.score\n        this.slime.exited = false\n        this.currentLevel++;\n        this.level = new Level(this.ctx, this.canvas, LEVELS[this.currentLevel], this.slime);\n        this.allObjects = this.level.objects;\n        this.slime.resetStats();\n        this.slime.roomHealth = this.slime.health;\n        this.tutorialFinished = false\n        this.generateLevel();\n    }\n\n    async generateLevel(){\n        const monitorText = document.querySelector('#monitor-text')\n        monitorText.textContent = ''\n\n        let textArr = this.level.monitorText\n\n        for(let i = 0; i < textArr.length; i++){\n            await this.typeSpeed(50);\n            monitorText.textContent += textArr[i];\n        }\n\n        this.allObjects[this.allObjects.findIndex(el => el instanceof Door)].color = 'aliceblue';\n        this.tutorialFinished = true\n    }\n    typeSpeed = (ms) => {\n        return new Promise(resolve => setTimeout(resolve, ms))\n    }\n\n} ","import { Game } from './game.js';\nimport { ColorPad } from './color_pads.js';\n\nexport default class GameView {\n\tconstructor(ctx, canvas) {\n\t\tthis.ctx = ctx;\n\t\tthis.canvas = canvas;\n\t\tthis.game = new Game(this.ctx, this.canvas);\n\t\tthis.paused = false;\n\t\tthis.pauseMenu = document.getElementById('pause-menu');\n\t\tthis.gameOverScreen = document.querySelector('.game-over-screen');\n\t\tthis.gameOverMenu = document.querySelector('#game-over-menu');\n\t\tthis.finalScore = document.getElementById('final-score');\n\t\tthis.pauseMenu.addEventListener('click', this.pauseCallback.bind(this));\n\t}\n\n\tstart() {\n\t\twindow.requestAnimationFrame(this.gameLoop.bind(this));\n\t}\n\n\tgameLoop() {\n\t\tif (this.paused) return;\n\t\tif (this.game.checkGameStatus()) {\n\t\t\tthis.gameOverScreen.style.display = 'flex';\n\t\t\tthis.gameOverMenu.style.display = 'flex';\n\t\t\tthis.finalScore.textContent = this.game.score;\n\t\t\treturn;\n\t\t}\n\t\tthis.game.step();\n\t\tthis.game.draw(this.ctx, this.canvas);\n\t\twindow.requestAnimationFrame(this.gameLoop.bind(this));\n\t}\n\n\tpause() {\n\t\tthis.pauseMenu.style.display = 'flex';\n\t\tthis.paused = true;\n\t}\n\n\tpauseCallback(e) {\n\t\tconst resumeButton = document.getElementById('resume');\n\t\tif (e.target === resumeButton) {\n\t\t\tthis.resume();\n\t\t}\n\t}\n\n\tresume() {\n\t\tthis.pauseMenu.style.display = 'none';\n\t\tthis.paused = false;\n\t\tthis.gameLoop();\n\t}\n\n\tbindKeyHandlers() {\n\t\twindow.addEventListener('keydown', (e) => {\n\t\t\tswitch (e.code) {\n\t\t\t\tcase 'Space':\n\t\t\t\t\tthis.game.slime.resetStats();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowUp':\n\t\t\t\t\tif (this.game.slime.landing === true) {\n\t\t\t\t\t\tthis.game.frame = 0;\n\t\t\t\t\t}\n\t\t\t\t\tthis.game.slime.move('jump');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowLeft':\n\t\t\t\t\tthis.game.slime.move('move left');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowRight':\n\t\t\t\t\tthis.game.slime.move('move right');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowDown':\n\t\t\t\t\tif (this.game.frame > 45) {\n\t\t\t\t\t\tthis.game.frame = 0;\n\t\t\t\t\t} else if (this.game.frame > 40) {\n\t\t\t\t\t\tthis.game.frame = 40;\n\t\t\t\t\t}\n\t\t\t\t\tthis.game.slime.move('crouch');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyD':\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.game.slime.dashCount >= this.game.slime.dashCountMax &&\n\t\t\t\t\t\tthis.game.slime.color === 'yellow'\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.game.frame = 0;\n\t\t\t\t\t\tthis.game.slime.move('dash');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyF':\n\t\t\t\t\tlet floorColor = this.game.slime.floorColor.color;\n\t\t\t\t\tif (this.game.slime.color === 'blue') {\n\t\t\t\t\t\tswitch (floorColor) {\n\t\t\t\t\t\t\tcase 'red':\n                                this.game.slime.vel[1] *= -1 \n\t\t\t\t\t\t\t\tthis.game.slime.grav_dir = -1;\n\t\t\t\t\t\t\t\tthis.game.slime.color = 'red';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'orange':\n\t\t\t\t\t\t\t\tthis.game.slime.color = 'orange';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'yellow':\n\t\t\t\t\t\t\t\tthis.game.slime.dashCountMax = 1;\n\t\t\t\t\t\t\t\tthis.game.slime.color = 'yellow';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'green':\n\t\t\t\t\t\t\t\tthis.game.slime.color = 'green';\n\t\t\t\t\t\t\t\tif (this.game.slime.health < this.game.slime.maxHealth) {\n\t\t\t\t\t\t\t\t\tlet diff = this.game.slime.maxHealth - this.game.slime.health;\n\t\t\t\t\t\t\t\t\tdiff > 20\n\t\t\t\t\t\t\t\t\t\t? (this.game.slime.health += 20)\n\t\t\t\t\t\t\t\t\t\t: (this.game.slime.health += diff);\n                                    this.game.allObjects[this.game.allObjects.findIndex(el => el instanceof ColorPad && el.color === 'green')].color = 'clear';\n\t\t\t\t\t\t\t\t\tthis.game.slime.radius = this.game.slime.health / 2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'violet':\n\t\t\t\t\t\t\t\tthis.game.slime.color = 'violet';\n\t\t\t\t\t\t\t\tthis.game.slime.ignoreCollision = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'pink':\n\t\t\t\t\t\t\t\tthis.game.slime.jumpCountMax = 2;\n\t\t\t\t\t\t\t\tthis.game.slime.color = 'pink';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyP':\n\t\t\t\t\tthis.pause();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyA':\n\t\t\t\t\tthis.game.slime.move('meleeAttack');\n\t\t\t\t\tthis.game.frame = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'KeyS':\n\t\t\t\t\tthis.game.slime.move('rangedAttack');\n\t\t\t\t\tthis.game.frame = 0;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('keyup', (e) => {\n\t\t\tswitch (e.code) {\n\t\t\t\tcase 'ArrowRight':\n\t\t\t\t\tthis.game.slime.move('stop');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowLeft':\n\t\t\t\t\tthis.game.slime.move('stop');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ArrowDown':\n\t\t\t\t\tthis.game.slime.move('stop');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t}\n}\n","import { Blob } from \"./scripts/home_animation\";\nimport {LEVELS} from \"./scripts/levelsList\";\nimport GameView from \"./scripts/game_view.js\"\nimport { Level } from \"./scripts/level.js\";\nimport Slime from './scripts/slime.js'\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>{\n    const startGame = document.getElementById(\"startgame\");\n    const startMenu = document.querySelector(\".start-menu\");\n    const closeButton = document.getElementById(\"close-button\");\n    const closeButton2 = document.getElementById(\"close-button2\");\n    const about = document.getElementById('about');\n    const aboutMenu = document.querySelector('.about-menu');\n    const controls = document.querySelector('#controls');\n    const controlsMenu = document.querySelector('.controls-menu');\n    const gameOverScreen = document.querySelector('.game-over-screen');\n    const gameOverMenu = document.querySelector('#game-over-menu');\n    const monitor = document.querySelector('.monitor')\n    const retry = document.getElementById('retry')\n\n    const canvas = document.querySelector(\"#canvas\");\n    const canvas2 = document.getElementById('canvas2')\n    const ctx2 = canvas2.getContext('2d')\n    const ctx = canvas.getContext('2d');\n    const slimeColors = ['red', 'orange', 'yellow', 'green', 'blue', 'violet', 'pink']\n    \n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n\n    let newGameView = new GameView(ctx, canvas); \n    \n    retry.addEventListener(\"click\", () =>{\n        gameOverScreen.style.display = 'none';\n        gameOverMenu.style.display = 'none';\n        newGameView.game.deaths++\n        newGameView.game.score -= 1000; \n        newGameView.game.slime.health = newGameView.game.slime.roomHealth;\n        newGameView.game.level = new Level(ctx, canvas, LEVELS[newGameView.game.currentLevel], newGameView.game.slime)\n        newGameView.game.slime.radius = newGameView.game.slime.health / 2\n        newGameView.start(); \n        startFunc();\n    });\n\n    const startFunc = () => {\n        newGameView.game.slime.color = 'blue';\n        newGameView.bindKeyHandlers();\n        newGameView.game.slime.gravity = 0.98\n    }\n    \n    startGame.addEventListener(\"click\", () => {\n        monitor.style.display = 'flex';\n        canvas.style.filter = 'none';\n        canvas.style.backgroundColor = 'aliceblue';\n        window.cancelAnimationFrame(slimeLoop);\n        slimeLoopCancelled = true;\n        clearInterval(slimeHomeColors);\n        startMenu.style.display = \"none\"; // delete to go to old cdd \n        newGameView.start(); // move up to create better css \n        startFunc()\n    });\n\n    about.addEventListener(\"click\", () => {\n        startMenu.style.display = 'none';\n        aboutMenu.style.display = 'flex';\n    });\n\n    controls.addEventListener(\"click\", () => {\n        startMenu.style.display = 'none';\n        controlsMenu.style.display = 'flex';\n    });\n\n    closeButton.addEventListener(\"click\", () =>{\n        aboutMenu.style.display = 'none';\n        startMenu.style.display = 'flex';\n    });\n\n    closeButton2.addEventListener(\"click\", () =>{\n        startMenu.style.display = 'flex';\n        controlsMenu.style.display = 'none';\n    });\n\n\n\n/// chunk\n    let slimeLoopCancelled = false\n    let blobArray = []\n    let i = 5\n    let slimeHomeColors = setInterval(() => {\n        slime1.color = slimeColors[i % 7];\n        i++ \n    }, 500);\n\n    const collect = (num) => {\n        for(let i = 0; i< num; i++){\n            blobArray.push(new Blob(canvas))\n        }\n    }\n    collect(30);\n\n    let slime1 = new Slime([0, 0], undefined, ctx2, canvas2)\n    let frame = 0\n\n    const slimeLoop = () => {\n        ctx.clearRect(0,0, canvas.width,canvas.height);\n        ctx2.clearRect(0,0, canvas2.width, canvas2.height)\n        frame++\n        blobArray.forEach(blob => blob.update())\n        blobArray.forEach(blob => blob.draw(ctx))\n        slime1.animate(frame, 5);\n        if(!slimeLoopCancelled){\n            window.requestAnimationFrame(slimeLoop)\n        }\n    }\n\n    window.requestAnimationFrame(slimeLoop);\n\n    \n    /// chunk\n})\n"],"names":["Blob","constructor","canvas","this","radius","Math","random","pos","width","vel","range","gravity","color","update","height","draw","ctx","fillStyle","beginPath","arc","PI","fill","LEVELS","monitorText","tileArray","COLORS","red","lighterShade","lightShade","baseShade","darkShade","darkerShade","orange","yellow","green","blue","violet","pink","clear","ColorPad","used","animate","padSheet","document","querySelector","x","Object","keys","indexOf","drawImage","Spike","spike","Level","optionsHash","slime","score","objects","optionsBreaker","tileMapping","TileArray","objectsArray","TileWidth","length","TileHeight","i","j","y","push","Door","Floor","position","fillRect","ANIMATIONS","rangedAttack","meleeAttack","death","dash","hurt","move","crouch","idle","jump","land","Slime","game","terminal_vel","grav_dir","jumpCount","jumpCountMax","state","landing","health","roomHealth","iFrames","maxHealth","damage","redDmgMod","ignoreCollision","dashCount","dashCountMax","floorColor","moving","frame","stagger","slimeSheet","floor","focused","focus","putImageData","updatepos","slimeMove","sign","slimeScan","getImageData","slimeArr","data","shade","isCollidedWith","otherObject","exited","horizontalCollision","takeDamage","verticalCollision","abs","otherX","otherX2","otherY","otherY2","setTimeout","resetStats","Game","ms","Promise","resolve","currentLevel","level","monitor","scoreFrame","healthFrame","scoreText","getElementById","healthBar","deathFrame","deathText","deaths","allObjects","tutorialFinished","generateLevel","step","moveObjects","checkCollisions","clearRect","forEach","obj","style","display","textContent","value","nextLevel","checkGameStatus","textArr","typeSpeed","findIndex","el","GameView","paused","pauseMenu","gameOverScreen","gameOverMenu","finalScore","addEventListener","pauseCallback","bind","start","window","requestAnimationFrame","gameLoop","pause","e","resumeButton","target","resume","bindKeyHandlers","code","diff","startGame","startMenu","closeButton","closeButton2","about","aboutMenu","controls","controlsMenu","retry","canvas2","ctx2","getContext","slimeColors","innerHeight","innerWidth","newGameView","startFunc","filter","backgroundColor","cancelAnimationFrame","slimeLoop","slimeLoopCancelled","clearInterval","slimeHomeColors","blobArray","setInterval","slime1","num","collect","undefined","blob"],"sourceRoot":""}